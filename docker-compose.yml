services:
  # Pub/Sub emulator
  pubsub-emulator:
    container_name: pubsub-emulator
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085 --project=${GCP_PROJECT_ID:-local-project}
    ports:
      - "8085:8085"
    environment:
      - PUBSUB_PROJECT_ID=${GCP_PROJECT_ID:-local-project}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Pub/Sub initializer
  pubsub-init:
    container_name: pubsub-init
    image: curlimages/curl:latest
    volumes:
      - ./scripts:/scripts
    environment:
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_PUBSUB_TOPIC_ID=${GCP_PUBSUB_TOPIC_ID}
      - GCP_PUBSUB_SUBSCRIPTION_ID=${GCP_PUBSUB_SUBSCRIPTION_ID}
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
    entrypoint: ["/bin/sh", "/scripts/init-pubsub-dev.sh"]
    depends_on:
      pubsub-emulator:
        condition: service_healthy

  # Auth service
  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - BROKER_URL=${BROKER_URL}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_PUBSUB_TOPIC_ID=${GCP_PUBSUB_TOPIC_ID}-dev
      - GCP_PUBSUB_SUBSCRIPTION_ID=${GCP_PUBSUB_SUBSCRIPTION_ID}-dev
      - INTERNAL_API_KEY=${INTERNAL_API_KEY:-your-internal-api-key}
    depends_on:
      - message-broker
      - pubsub-init
    volumes:
      - ./auth-service:/app
    restart: unless-stopped

  # API Gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - BROKER_URL=${BROKER_URL}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_PUBSUB_TOPIC_ID=${GCP_PUBSUB_TOPIC_ID}-dev
      - GCP_PUBSUB_SUBSCRIPTION_ID=${GCP_PUBSUB_SUBSCRIPTION_ID}-dev
      - ENVIRONMENT=development
      - AUTH_SERVICE_URL=http://auth-service:8000
      - INTERNAL_API_KEY=${INTERNAL_API_KEY:-your-internal-api-key}
    depends_on:
      - message-broker
      - pubsub-init
      - auth-service
    volumes:
      - ./api-gateway:/app
    restart: unless-stopped

  # Telegram bot service
  telegram-bot:
    container_name: telegram-bot
    build:
      context: ./telegram-bot
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${NGROK_URL}/webhook
      - PORT=8080
      - API_GATEWAY_URL=http://api-gateway:8000
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_PUBSUB_TOPIC_ID=${GCP_PUBSUB_TOPIC_ID}-dev
      - GCP_PUBSUB_SUBSCRIPTION_ID=${GCP_PUBSUB_SUBSCRIPTION_ID}-dev
      - AUTH_SERVICE_URL=http://auth-service:8000
      - API_KEY=${INTERNAL_API_KEY:-your-internal-api-key}
    volumes:
      - ./telegram-bot:/app
    restart: unless-stopped

  # Message broker service
  message-broker:
    container_name: message-broker
    build:
      context: ./message-broker
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8080"
    environment:
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_PUBSUB_TOPIC_ID=${GCP_PUBSUB_TOPIC_ID}-dev
      - GCP_PUBSUB_SUBSCRIPTION_ID=${GCP_PUBSUB_SUBSCRIPTION_ID}-dev
      - TELEGRAM_BOT_URL=http://telegram-bot:8080
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - PUBSUB_PROJECT_ID=${GCP_PROJECT_ID}
      - AUTH_SERVICE_URL=http://auth-service:8000
      - INTERNAL_API_KEY=${INTERNAL_API_KEY:-your-internal-api-key}
    depends_on:
      pubsub-emulator:
        condition: service_healthy
      pubsub-init:
        condition: service_completed_successfully
    volumes:
      - ./message-broker:/app
    restart: unless-stopped

  # Webhook setup service
  webhook-setup:
    container_name: webhook-setup
    image: curlimages/curl:latest
    volumes:
      - ./scripts:/scripts
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - NGROK_URL=${NGROK_URL}
    entrypoint: ["/bin/sh", "/scripts/setup-telegram-webhook-dev.sh"]
    depends_on:
      - telegram-bot
    restart: "no"

networks:
  default:
    name: app-network 